import os
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties

from bot.stat_handler import router as stat_router
from bot.security_handler import AuthorizationMiddleware

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(
    token=os.getenv('TG_BOT_TOKEN'),
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –†–æ—É—Ç–µ—Ä—ã –∏ middleware
dp.include_router(stat_router)
dp.message.middleware(AuthorizationMiddleware())

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
START_TEXT = (
    'Hi!'
    # 'üìä <b>–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Wildberries!</b>'
    # '\n\n'
    # '–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–∏–Ω–∞–º–∏–∫–æ–π –∑–∞–∫–∞–∑–æ–≤ –∏ –ø—Ä–æ–¥–∞–∂ —Ç–≤–æ–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ Wildberries.'
    # '\n\n\n'
    # 'üîç <b>–ß—Ç–æ —è —É–º–µ—é:</b>'
    # '\n\n'
    # 'üìà –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –∑–∞–∫–∞–∑–æ–≤, –ø—Ä–æ–¥–∞–∂ –∏ –æ—Ç–∫–∞–∑–æ–≤'
    # '\n\n'
    # 'üîî –ü—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö, –≤—ã–∫—É–ø–∞—Ö –∏ –æ—Ç–∫–∞–∑–∞—Ö'
    # '\n\n\n'
    # '–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. üöÄ'
)


@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(START_TEXT)


async def create_bot_task():
    await dp.start_polling(bot)


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–≤–Ω–µ
def send_message(chat_id: int, text: str, disable_notifications: bool = False, reply_markup=None):
    loop = asyncio.get_event_loop()
    asyncio.run_coroutine_threadsafe(
        bot.send_message(chat_id=chat_id, text=text, disable_notification=disable_notifications, reply_markup=reply_markup),
        loop
    )
